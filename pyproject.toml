[tool.poetry]
name = "reactive-pydantic"
version = "0.1.0"
description = "A library for creating reactive Pydantic models using RxPy."
authors = ["Your Name <dogukan.altay@yahoo.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/dogukanaltay/reactive-pydantic"
repository = "https://github.com/dogukanaltay/reactive-pydantic"
keywords = ["pydantic", "reactive", "rxpy", "observables"]

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^2.0.0"
reactivex = "^4.0.4"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
black = "^21.7b0"
mypy = "^0.910"
flake8 = "^3.9.2"
ruff = "^0.1.0"
pre-commit = "^3.0.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["F401", "F811"]

[tool.ruff.isort]
known-first-party = ["reactive_pydantic"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"